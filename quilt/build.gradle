plugins {
    id 'org.quiltmc.loom' version '1.6.7'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

base {
    archivesName = 'Patched-quilt'
}

configurations {
    implementation.extendsFrom shadow
}

// https://quiltmc.org/en/usage/latest-versions
dependencies {
    minecraft 'com.mojang:minecraft:1.21'
    mappings loom.layered {
        mappings 'org.quiltmc:quilt-mappings:1.20.6+build.6:intermediary-v2'
        officialMojangMappings()
    }

    modImplementation 'org.quiltmc:quilt-loader:0.26.0'
    modImplementation 'org.quiltmc:qsl:8.0.0-alpha.13+1.20.4' // TODO

    shadow ("com.github.EnderTurret:Patched:$patchedVersion") {
        exclude group: 'com.google.code.gson', module: 'gson'
    }

    compileOnly (project(':PatchedModCommon')) {
        exclude group: 'org.spongepowered', module: 'mixin'
        exclude group: 'net.minecraft', module: 'joined_aw'
    }
}

loom {
    accessWidenerPath = file("$rootDir/quilt/src/main/resources/patched.accesswidener")

    mixin {
        defaultRefmapName = 'patched.refmap.json'
    }

    // Due to an incredible oversight(?) in Loom, these actually do nothing.
    // You cannot change the configuration name from the default, which is derived from the project name.
    runs {
        client {
            configName = 'runPatchedClientQuilt'
        }

        server {
            configName = 'runPatchedServerQuilt'
        }
    }

    runConfigs.configureEach {
        ideConfigGenerated = true
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
}

compileJava {
    source project(':PatchedModCommon').sourceSets.main.allSource
}

sourcesJar {
    from project(':PatchedModCommon').sourceSets.main.allJava
}

processResources {
    from project(':PatchedModCommon').sourceSets.main.resources
}

import net.fabricmc.loom.task.RemapJarTask

task remappedShadowJar(type: RemapJarTask, dependsOn: shadowJar) {
    input = tasks.shadowJar.archiveFile
    archiveClassifier = ''
}

artifacts {
    archives remappedShadowJar
    shadow shadowJar
}

processResources {
    inputs.property 'version', project.version

    filesMatching('quilt.mod.json') {
        expand 'version': project.version
    }
}