plugins {
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'net.minecraftforge.gradle' version '[6.0, 6.2)'
    id 'org.spongepowered.mixin' version '0.7.33'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '1.20-1.0.0'
group = 'net.enderturret'

base {
    archivesName = 'Patched-forge'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, 'patched.refmap.json'
}

repositories {
    maven {
        url = 'https://jitpack.io'
        content {
            includeGroup 'com.github.EnderTurret'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20-46.0.1'

    minecraftLibrary ('com.github.EnderTurret:Patched:1.2.1') {
        exclude group: 'com.google.code.gson', module: 'gson'
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

minecraft {
    mappings channel: 'parchment', version: '1.19.3-2023.03.12-1.20'
	accessTransformer = file("$rootDir/src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file('run')

            arg '-mixin.config=mixins.patched.json'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                patched {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            arg '-mixin.config=mixins.patched.json'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                patched {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'patched', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                patched {
                    source sourceSets.main
                }
            }
        }
    }
}

reobf {
    shadowJar {
        mappings = createMcpToSrg.output
    }
    jar {
        enabled = false
    }
}

shadowJar {
    archiveClassifier = ''

    dependencies {
        include(dependency('com.github.EnderTurret:Patched:1.2.1'))
    }
}

jar.enabled = false

jar {
    manifest {
        attributes([
            'Specification-Title': 'Patched',
            'Specification-Vendor': 'EnderTurret',
            'Specification-Version': '1',
            'Implementation-Title': 'Patched',
            'Implementation-Version': "${version}",
            'Implementation-Vendor' : 'EnderTurret',
            'MixinConfigs': 'mixins.patched.json'
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

shadowJar.finalizedBy('reobfShadowJar')

// Fix mixingradle.
eclipseJdtApt.dependsOn createMcpToSrg

// Compact JSON files for smol jars.

import groovy.json.*

processResources {
    doLast {
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}