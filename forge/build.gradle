plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'net.minecraftforge.gradle' version '[6.0, 6.2)'
    id 'org.spongepowered.mixin' version '0.7.33'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

base {
    archivesName = 'Patched-forge'
}

mixin {
    add sourceSets.main, 'patched.refmap.json'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'

    compileOnly (project(':PatchedModCommon')) {
        exclude group: 'org.spongepowered', module: 'mixin'
        exclude group: 'net.minecraft', module: 'joined_aw'
    }

    minecraftLibrary ("com.github.EnderTurret:Patched:$patchedVersion") {
        exclude group: 'com.google.code.gson', module: 'gson'
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

minecraft {
    mappings channel: 'parchment', version: '2023.07.09-1.20.1'
	accessTransformer = file("$rootDir/forge/src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        configureEach {
            workingDirectory project.file('run')

            arg '-mixin.config=mixins.patched.json'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                patched {
                    source sourceSets.main
                    source project(':PatchedModCommon').sourceSets.main
                }
            }
        }

        client {
            taskName 'runPatchedClientForge'
        }

        server {
            taskName 'runPatchedServerForge'
        }

        data {
            taskName 'runPatchedDataForge'

            args '--mod', 'patched', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

compileJava {
    source project(':PatchedModCommon').sourceSets.main.allSource
}

sourcesJar {
    from project(':PatchedModCommon').sourceSets.main.allJava
}

processResources {
    from project(':PatchedModCommon').sourceSets.main.resources
}

reobf {
    shadowJar {
        mappings = createMcpToSrg.output
    }
    jar {
        enabled = false
    }
}

shadowJar {
    archiveClassifier = ''

    dependencies {
        include(dependency("com.github.EnderTurret:Patched:$patchedVersion"))
    }
}

jar.enabled = false

shadowJar.finalizedBy('reobfShadowJar')

// Fix mixingradle.
eclipseJdtApt.dependsOn createMcpToSrg