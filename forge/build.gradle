plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'net.neoforged.gradle.userdev' version '7.0.5'
    id 'net.neoforged.gradle.mixin' version '7.0.5'
    // TODO: See minecraft.mappings
    //id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

base {
    archivesName = 'Patched-neoforge'
}

mixin {
    config 'mixins.patched.json'
}

dependencies {
    implementation 'net.neoforged:neoforge:20.2.3-beta'

    compileOnly (project(':PatchedModCommon')) {
        exclude group: 'org.spongepowered', module: 'mixin'
        exclude group: 'net.minecraft', module: 'joined_aw'
    }

    // TODO: https://github.com/neoforged/NeoGradle/issues/12
    implementation ("com.github.EnderTurret:Patched:$patchedVersion") {
        exclude group: 'com.google.code.gson', module: 'gson'
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

minecraft {
    // TODO: It looks like you can't change the mappings right now
    //mappings channel: 'parchment', version: '2023.10.22-1.20.2'
    accessTransformers.file rootProject.file('forge/src/main/resources/META-INF/accesstransformer.cfg')
}

runs {
    configureEach {
        workingDirectory project.file('run')

        programArgument '-mixin.config=mixins.patched.json'

        modSource sourceSets.main
        // TODO: Supposedly also https://github.com/neoforged/NeoGradle/issues/12
        //modSource project(':PatchedModCommon').sourceSets.main
    }

    runPatchedClientNeoForge {}

    runPatchedServerNeoForge {}

    runPatchedDataNeoForge {
        programArguments.addAll '--mod', 'patched', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

compileJava {
    source project(':PatchedModCommon').sourceSets.main.allSource
}

sourcesJar {
    from project(':PatchedModCommon').sourceSets.main.allJava
}

processResources {
    from project(':PatchedModCommon').sourceSets.main.resources
}

shadowJar {
    archiveClassifier = ''

    dependencies {
        include(dependency("com.github.EnderTurret:Patched:$patchedVersion"))
    }
}

jar.enabled = false

artifacts {
    archives shadowJar
}